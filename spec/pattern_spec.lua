describe('pattern', function()
    setup(function()
        pattern = require("lib/pattern")
    end)

    describe('new()', function()
        it('should have an initial selectedTrack', function()
            assert.same(1, pattern.new().selectedTrack)
        end)
    end)

    describe('advance()', function()
        it('should return a new pattern with the position of each track incremented by 1', function()
            local p = pattern.new()

            assert.same(1, p.tracks[1].pos)
            p = pattern.advance(p)
            assert.same(2, p.tracks[1].pos)
        end)
    end)

    describe('toggleStep()', function()
        it('should return toggle the step for the currently selected track', function()
            local p = pattern.new()

            assert.same(false, p.tracks[1].steps[1])
            p = pattern.toggleStep(p, 1)
            assert.same(true, p.tracks[1].steps[1])
        end)
    end)

    describe('positionOfSelectedTrack()', function()
        it('should return position for the currently selected track', function()
            local p = pattern.new()

            assert.same(1, pattern.positionOfSelectedTrack(p))
            p = pattern.advance(p)
            assert.same(2, pattern.positionOfSelectedTrack(p))
        end)
    end)

    describe('currentSteps', function()
        it('returns a table of track to step mappings for the current time', function()
            local p = pattern.new()
            assert.same(false, pattern.currentSteps(p)[1])
            assert.same(false, pattern.currentSteps(p)[2])
        end)
    end)
end)
